name: Daily Workflow Run Verification

permissions:
  issues: write
  actions: read

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:

jobs:
  check-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Check workflow runs and open issues if necessary
        uses: actions/github-script@v7
        with:
          script: |
            const workflows = [
              { name: 'Spec-Kit Validation', branch: 'main' },
              { name: 'Dev Branch Workflow', branch: 'dev' },
              { name: 'Test Branch Workflow', branch: 'test' },
              { name: 'Stage Branch Workflow', branch: 'stage' },
              { name: 'Production Branch Workflow', branch: 'prod' },
              { name: 'Pages Branch Workflow', branch: 'pages' }
            ];
            for (const wf of workflows) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: wf.name,
                branch: wf.branch,
                per_page: 1
              });
              const latest = runs.data.workflow_runs[0];
              if (!latest || latest.conclusion !== 'success') {
                const title = `Workflow ${wf.name} failing on branch ${wf.branch}`;
                const body = latest
                  ? `The latest run (${latest.html_url}) of workflow **${wf.name}** on branch **${wf.branch}** concluded with status: ${latest.conclusion}. Please investigate.`
                  : `No runs found for workflow **${wf.name}** on branch **${wf.branch}**.`;
                const { data: issues } = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: 'open'
                });
                const exists = issues.find(issue => issue.title === title);
                if (!exists) {
                  await github.rest.issues.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: title,
                    body: body
                  });
                }
              }
            }
