name: Daily Workflow Run Verification

permissions:
  issues: write
  actions: read

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:

jobs:
  check-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Check workflow runs and open issues if necessary
        uses: actions/github-script@v7
        with:
          script: |
            const workflows = [
              { name: 'Spec-Kit Validation', file: 'spec-kit.yml', branch: 'main' },
              { name: 'Dev Branch Workflow', file: 'dev.yml', branch: 'dev' },
              { name: 'Test Branch Workflow', file: 'test.yml', branch: 'test' },
              { name: 'Stage Branch Workflow', file: 'stage.yml', branch: 'stage' },
              { name: 'Production Branch Workflow', file: 'prod.yml', branch: 'prod' },
              { name: 'Pages Branch Workflow', file: 'pages.yml', branch: 'pages' }
            ];
            for (const wf of workflows) {
              try {
                const runs = await github.rest.actions.listWorkflowRuns({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  workflow_id: wf.file,
                  branch: wf.branch,
                  per_page: 1
                });
                const latest = runs.data.workflow_runs[0];
                if (!latest || latest.conclusion !== 'success') {
                  const title = `Workflow ${wf.name} failing on branch ${wf.branch}`;
                  const body = latest
                    ? `The latest run (${latest.html_url}) of workflow **${wf.name}** on branch **${wf.branch}** concluded with status: ${latest.conclusion}. Please investigate.`
                    : `No runs found for workflow **${wf.name}** on branch **${wf.branch}**.`;
                  const { data: issues } = await github.rest.issues.listForRepo({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    state: 'open'
                  });
                  const exists = issues.find(issue => issue.title === title);
                  if (!exists) {
                    await github.rest.issues.create({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      title: title,
                      body: body
                    });
                  }
                }
              } catch (error) {
                console.log(`Error checking workflow ${wf.name}: ${error.message}`);
                // Continue to next workflow instead of failing the entire job
              }
            }
